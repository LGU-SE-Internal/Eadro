dataset = "tt"

[datasets.sn]
root_path = "/mnt/jfs/rcabench-platform-v2/data/Eadro/SN_Dataset"
load_method = "all"
log_files = ["log.parquet"]
metric_files = ["metric.parquet"]
trace_files = ["trace.parquet"]
label_files = ["fault_info.json"]
sample_interval = 10                                              # seconds. Means every sample is 10 seconds apart
sample_step = 1

[datasets.tt]
root_path = "/mnt/jfs/rcabench-platform-v2/data/Eadro/TT_Dataset"
load_method = "all"
log_files = ["log.parquet"]
metric_files = ["metric.parquet"]
trace_files = ["trace.parquet"]
label_files = ["fault_info.json"]
sample_interval = 10                                              # seconds. Means every sample is 10 seconds apart
sample_step = 1


[datasets.rcabench]
root_path = "/mnt/jfs/rcabench_dataset"
load_method = "database"
log_files = ["abnormal_logs.parquet", "normal_logs.parquet"]
metric_files = [
    "abnormal_metrics.parquet",
    "normal_metrics.parquet",
    "normal_metrics_sum.parquet",
    "abnormal_metrics_sum.parquet",
]
trace_files = ["abnormal_traces.parquet", "normal_traces.parquet"]
label_files = ["injection.json", "env.json"]

# Training configuration
[training]
random_seed = 114514
gpu = true
device = "cuda"       # cuda, cpu, or auto
epochs = 200
batch_size = 256
lr = 0.001
patience = 20
train_ratio = 0.9
evaluation_epoch = 10

# Learning rate scheduler configuration
[training.lr_scheduler]
type = "step"     # none, step, exponential, cosine, plateau
step_size = 10
gamma = 0.99
warmup_epochs = 0
min_lr = 1e-6

# Model configuration
[model]
self_attn = true
fuse_dim = 128
alpha = 0.01      # Loss combination weight  
log_dim = 16      # Log embedding dimension
attn_head = 4     # Number of attention heads
activation = 0.2  # LeakyReLU negative slope
debug = false     # Debug mode
chunk_length = 10

# BaseModel specific parameters
[model.base]
result_dir = "result/"
hash_id = ""
use_wandb = false
wandb_project = "eadro-training"

# Model architecture - localization network
[model.localization]
hiddens = [64]

# Model architecture - detection network  
[model.detection]
hiddens = [64]

# Model architecture - trace processing
[model.trace]
kernel_sizes = [2]
hiddens = [64]
self_attn = true

# Model architecture - metric processing
[model.metric]
kernel_sizes = [2]
hiddens = [64]
self_attn = true
dropout = 0.0

# Model architecture - graph processing
[model.graph]
hiddens = [64]
attn_drop = 0.0

# Experiment management configuration
[experiment]
name_prefix = "exp"
description = "EADRO anomaly detection and fault localization experiment"
tags = ["eadro", "anomaly-detection", "fault-localization"]
log_level = "INFO"
log_rotation = "1 day"
metadata_save_frequency = 10
checkpoint_frequency = 10
auto_cleanup = true
max_checkpoints = 5
primary_metric = "HR@1"

# Paths configuration - updated with experiment-specific paths
[paths]
data_root = "/mnt/jfs/rcabench-platform-v2/data/rcabench_filtered"
result_dir = "result/"
checkpoint_dir = "checkpoints"
logs_dir = "logs"
inference_dir = "inference"
chunks_dir = "chunks/"
cache_dir = ".cache/"
